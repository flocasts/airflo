airflow:
  image:
     repository: gcr.io/engineering-sandbox-228018/dev-airflow
     tag: 1.10.12
  executor: Kubernetes
  service:
    type: LoadBalancer

  config:
    AIRFLOW__CORE__BASE_LOG_FOLDER: /opt/airflow/nfs/logs
    AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/nfs/dags
    AIRFLOW__CORE__EXECUTOR: KubernetesExecutor
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: True
    AIRFLOW__CORE__LOGGING_LEVEL: INFO
    AIRFLOW__CORE__FERNET_KEY: -VPrAtf3PunVqdBKdURvTnbn0VYOJfBqivkz9N3K2qo=
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:airflow@airflow-postgresql:5432/airflow
    AIRFLOW__CORE__LOAD_EXAMPLES: True

    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://postgres:airflow@airflow-postgresql:5432/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:airflow@airflow-redis-master:6379/0

    AIRFLOW__SCHEDULER__CATCHUP_BY_DEFAULT: False

    # Remote Logging
    AIRFLOW__CORE__REMOTE_LOGGING: False

    # Enable 2.0 UI
    # Temporary dummy login
    # airflow create_user --lastname West --firstname Adam --username caped --email test@mail.com --role Admin --password crusader
    # helm upgrade --install airflow -f /Users/andrewtan/Documents/airflo/helm/official/charts/stable/airflow/dev-airflow.yaml /Users/andrewtan/Documents/airflo/helm/official/charts/stable/airflow/ --namespace airflow
    AIRFLOW__WEBSERVER__RBAC: True
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: True
    AIRFLOW__WEBSERVER__LOG_FETCH_TIMEOUT_SEC: 30

    AIRFLOW__KUBERNETES__NAMESPACE: airflow
    AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY: gcr.io/engineering-sandbox-228018/dev-airflow
    AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG: 1.10.12
    AIRFLOW__KUBERNETES__WORKER_CONTAINER_IMAGE_PULL_POLICY: IfNotPresent
    AIRFLOW__KUBERNETES__WORKER_SERVICE_ACCOUNT_NAME: airflow
    AIRFLOW__KUBERNETES__DAGS_VOLUME_CLAIM: nfs-airflow-dags
    AIRFLOW__KUBERNETES__LOGS_VOLUME_CLAIM: nfs-airflow-logs
    # import pdb; pdb.set_trace()
    AIRFLOW__KUBERNETES__DELETE_WORKER_PODS: False
    AIRFLOW__KUBERNETES__KUBE_CLIENT_REQUEST_ARGS: '{\"_request_timeout\":[60, 60]}'

  extraVolumeMounts:
  - name: synchronised-data
    mountPath: /opt/airflow/nfs

  extraVolumes:
  - name: synchronised-data
    emptyDir: {}

# persistence:
#   enabled: false
#   existingClaim: nfs-airflow-dags
#   accessMode: ReadWriteMany
#   size: 1Gi
#
# logsPersistence:
#   enabled: false
#   existingClaim: nfs-airflow-logs
#   accessMode: ReadWriteMany
#   size: 1Gi

dags:
  path: /opt/airflow/nfs/dags
  # path: /usr/local/airflow/dags
  doNotPickle: false
  git:
    url: https://github.com/flocasts/airflo.git
    ref: DATA-2379
    secret: airflow-git
    repoHost: "github.com"
    privateKeyName: ""
    gitSync:
      enabled: true
      image:
        repository: alpine/git
        tag: 1.0.7
        pullPolicy: IfNotPresent
      refreshTime: 60
  initContainer:
    enabled: true
    image:
      repository: alpine/git
      tag: 1.0.7
      pullPolicy: IfNotPresent
    installRequirements: true
    mountPath: "/dags"
    syncSubPath: ""

logs:
  path: /opt/airflow/nfs/logs
  # path: /usr/local/airflow/logs

flower:
  enabled: false

workers:
  enabled: false

postgresql:
  enabled: true
  size: 5Gi

redis:
  enabled: false
